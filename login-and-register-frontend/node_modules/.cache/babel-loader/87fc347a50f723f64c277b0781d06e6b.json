{"ast":null,"code":"var _jsxFileName = \"D:\\\\piyush\\\\project\\\\Inventory-Management-System\\\\login-and-register-frontend\\\\src\\\\components\\\\pages\\\\dashboard\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Box, ThemeProvider, createTheme } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport useFetchInventory from \"../../../hooks/useFetchInventory\";\nimport { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    background: {\n      paper: \"#fff\"\n    },\n    text: {\n      primary: \"#173A5E\",\n      secondary: \"#46505A\"\n    },\n    action: {\n      active: \"#001E3C\"\n    },\n    success: {\n      dark: \"#009688\"\n    }\n  }\n});\n\nconst DashBoard = () => {\n  _s();\n\n  const {\n    data\n  } = useFetchInventory();\n  const [products, setProducts] = useState([]);\n  const [quantitys, setQuantitys] = useState([]);\n  console.log(data);\n  useEffect(() => {\n    const product = [];\n    const quantity = [];\n\n    const getStockdata = async () => {\n      const reqData = await fetch(\"http://localhost:5000/stockinfo\");\n      const resData = await reqData.json();\n\n      for (let i = 0; i < resData.length; i++) {\n        product.push(resData[i].productname);\n        quantity.push(parseInt(resData[i].totalQuantity));\n      } //   data.map((stock, index) => {\n      //     product.push(stock.productname);\n      //     quantity.push(parseInt(stock.totalQuantity));\n      //   });\n\n\n      setProducts(product);\n      setQuantitys(quantity);\n      console.log(product, quantity);\n    };\n\n    getStockdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      children: \"DashBoard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: \"background.paper\",\n          boxShadow: 1,\n          borderRadius: 2,\n          p: 2,\n          maxWidth: 300,\n          ml: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            color: \"text.secondary\"\n          },\n          children: \"Stock Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            color: \"text.primary\",\n            fontSize: 34,\n            fontWeight: \"medium\"\n          },\n          children: \"1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"pie\",\n        width: 1349,\n        height: 350,\n        series: quantitys,\n        options: {\n          title: {\n            text: \"Stock PieChart\"\n          },\n          noData: {\n            text: \"Empty Data\"\n          },\n          // colors:[\"#f90000\",\"#f0f\"],\n          labels: products\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashBoard, \"zs3IJZUcE2V9sQoBo1vOUG8daMs=\", false, function () {\n  return [useFetchInventory];\n});\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/components/pages/dashboard/Dashboard.jsx"],"names":["React","Box","ThemeProvider","createTheme","Typography","useFetchInventory","useState","useEffect","Chart","theme","palette","background","paper","text","primary","secondary","action","active","success","dark","DashBoard","data","products","setProducts","quantitys","setQuantitys","console","log","product","quantity","getStockdata","reqData","fetch","resData","json","i","length","push","productname","parseInt","totalQuantity","bgcolor","boxShadow","borderRadius","p","maxWidth","ml","color","fontSize","fontWeight","title","noData","labels"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Box, ThemeProvider, createTheme } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\nimport useFetchInventory from \"../../../hooks/useFetchInventory\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      paper: \"#fff\",\r\n    },\r\n    text: {\r\n      primary: \"#173A5E\",\r\n      secondary: \"#46505A\",\r\n    },\r\n    action: {\r\n      active: \"#001E3C\",\r\n    },\r\n    success: {\r\n      dark: \"#009688\",\r\n    },\r\n  },\r\n});\r\n\r\nconst DashBoard = () => {\r\n  const { data } = useFetchInventory();\r\n  const [products, setProducts] = useState([]);\r\n  const [quantitys, setQuantitys] = useState([]);\r\n  console.log(data);\r\n  useEffect(() => {\r\n    const product = [];\r\n    const quantity = [];\r\n    const getStockdata = async () => {\r\n      const reqData = await fetch(\"http://localhost:5000/stockinfo\");\r\n      const resData = await reqData.json();\r\n      for (let i = 0; i < resData.length; i++) {\r\n        product.push(resData[i].productname);\r\n        quantity.push(parseInt(resData[i].totalQuantity));\r\n      }\r\n      //   data.map((stock, index) => {\r\n      //     product.push(stock.productname);\r\n      //     quantity.push(parseInt(stock.totalQuantity));\r\n      //   });\r\n      setProducts(product);\r\n      setQuantitys(quantity);\r\n      console.log(product, quantity);\r\n    };\r\n    getStockdata();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h2\" component=\"h2\">\r\n        DashBoard\r\n      </Typography>\r\n      <ThemeProvider theme={theme}>\r\n        <Box\r\n          sx={{\r\n            bgcolor: \"background.paper\",\r\n            boxShadow: 1,\r\n            borderRadius: 2,\r\n            p: 2,\r\n            maxWidth: 300,\r\n            ml: 2,\r\n          }}\r\n        >\r\n          <Box sx={{ color: \"text.secondary\" }}>Stock Percentage</Box>\r\n          <Box\r\n            sx={{ color: \"text.primary\", fontSize: 34, fontWeight: \"medium\" }}\r\n          >\r\n            1000\r\n          </Box>\r\n        </Box>\r\n      </ThemeProvider>\r\n      <div>\r\n        <Chart\r\n          type=\"pie\"\r\n          width={1349}\r\n          height={350}\r\n          series={quantitys}\r\n          options={{\r\n            title: { text: \"Stock PieChart\" },\r\n            noData: { text: \"Empty Data\" },\r\n            // colors:[\"#f90000\",\"#f0f\"],\r\n            labels: products,\r\n          }}\r\n        ></Chart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DashBoard;\r\n"]},"metadata":{},"sourceType":"module"}