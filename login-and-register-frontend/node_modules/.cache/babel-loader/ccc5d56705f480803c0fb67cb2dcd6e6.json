{"ast":null,"code":"var _jsxFileName = \"D:\\\\piyush\\\\project\\\\Inventory-Management-System\\\\login-and-register-frontend\\\\src\\\\components\\\\pages\\\\order\\\\Order.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardContent, Grid, TextField, Typography } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nconst Order = () => {\n  _s();\n\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState();\n  const [product, setProduct] = React.useState([]);\n  const [price, setPrice] = React.useState();\n  const [quantity, setQuantity] = React.useState();\n  const [ordDetails, setOrdeDetails] = React.useState({\n    firstname: \"\",\n    lastname: \"\",\n    date: '',\n    address: ''\n  });\n\n  const quantityHandleChange = e => {\n    setQuantity(e.target.value);\n    console.log(e.target.value);\n    product.map(list => {\n      if (list.productname === personName && e.target.value) {\n        setPrice(list.price * e.target.value);\n      }\n    });\n  }; //getting list of product\n\n\n  React.useEffect(() => {\n    axios.get(\"http://localhost:5000/stockino\").then(res => {\n      console.log(res.data);\n      setProduct(res.data);\n    });\n  }, []); //   React.useEffect(() => {\n  //     product.map((list) => {\n  //       if (list.productname === personName && order) {\n  //         setPrice(list.price * order);\n  //       }\n  //     });\n  //   }, [personName]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setPersonName(value // On autofill we get a stringified value.\n    //typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  console.log(personName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          padding: \"20px 5px\",\n          margin: \"0 auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            children: \"Order Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                sm: 6,\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  placeholder: \"Enter first name\",\n                  label: \"First Name\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 12,\n                sm: 6,\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  placeholder: \"Enter last name\",\n                  label: \"Last Name\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  label: \"Email\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  placeholder: \"Enter phone number\",\n                  label: \"Phone\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"date\",\n                  label: \"Date\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Delivery Address\",\n                  placeholder: \"Enter Your address\",\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {},\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-multiple-name-label\",\n                    children: \"Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"demo-multiple-name-label\",\n                    id: \"demo-multiple-name\",\n                    value: product.productname,\n                    onChange: handleChange,\n                    input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                      label: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 30\n                    }, this),\n                    MenuProps: MenuProps,\n                    children: product.map(product => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: product.productname //   style={getStyles(name, personName, theme)}\n                      ,\n                      children: product.productname\n                    }, product._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"number\",\n                  label: \"Quantity\",\n                  variant: \"outlined\",\n                  onChange: quantityHandleChange,\n                  value: quantity,\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Total Price\",\n                  variant: \"outlined\",\n                  value: price,\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), \";\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"Payment Mode\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"demo-simple-select-label\",\n                    id: \"demo-simple-select\" //={age}\n                    ,\n                    label: \"payment mode\",\n                    onChange: handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 10,\n                      children: \"COD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 20,\n                      children: \"Credit Card\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 30,\n                      children: \"Upi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  fullWidth: true,\n                  children: \"Place Order\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Order, \"PgwZlaeAU7cLVgSeTgOjLe1PuuU=\", false, function () {\n  return [useTheme];\n});\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/components/pages/order/Order.jsx"],"names":["Button","Card","CardContent","Grid","TextField","Typography","React","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","axios","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Order","setPersonName","useState","product","setProduct","price","setPrice","quantity","setQuantity","ordDetails","setOrdeDetails","firstname","lastname","date","address","quantityHandleChange","e","target","value","console","log","map","list","productname","useEffect","get","then","res","data","handleChange","event","padding","margin","_id"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport axios from \"axios\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst Order = () => {\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState();\r\n  const [product, setProduct] = React.useState([]);\r\n  const [price, setPrice] = React.useState();\r\n  const [quantity, setQuantity] = React.useState();\r\n  const [ordDetails, setOrdeDetails] = React.useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    date:'',\r\n    address:'',\r\n\r\n\r\n  });\r\n\r\n  const quantityHandleChange = (e) => {\r\n    setQuantity(e.target.value);\r\n    console.log(e.target.value);\r\n    product.map((list) => {\r\n      if (list.productname === personName && e.target.value) {\r\n        setPrice(list.price * e.target.value);\r\n      }\r\n    });\r\n  };\r\n\r\n  //getting list of product\r\n  React.useEffect(() => {\r\n    axios.get(\"http://localhost:5000/stockino\").then((res) => {\r\n      console.log(res.data);\r\n      setProduct(res.data);\r\n    });\r\n  }, []);\r\n  //   React.useEffect(() => {\r\n  //     product.map((list) => {\r\n  //       if (list.productname === personName && order) {\r\n  //         setPrice(list.price * order);\r\n  //       }\r\n  //     });\r\n  //   }, [personName]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setPersonName(\r\n      value\r\n      // On autofill we get a stringified value.\r\n      //typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n  };\r\n  console.log(personName);\r\n\r\n  return (\r\n    <div>\r\n      <Grid>\r\n        <Card style={{ padding: \"20px 5px\", margin: \"0 auto\" }}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              Order Details\r\n            </Typography>\r\n\r\n            <form>\r\n              <Grid container spacing={1}>\r\n                <Grid xs={12} sm={6} item>\r\n                  <TextField\r\n                    placeholder=\"Enter first name\"\r\n                    label=\"First Name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid xs={12} sm={6} item>\r\n                  <TextField\r\n                    placeholder=\"Enter last name\"\r\n                    label=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    placeholder=\"Enter phone number\"\r\n                    label=\"Phone\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"date\"\r\n                    label=\"Date\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Delivery Address\"\r\n                    placeholder=\"Enter Your address\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl sx={{}} fullWidth required>\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Product\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      value={product.productname}\r\n                      onChange={handleChange}\r\n                      input={<OutlinedInput label=\"Name\" />}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {product.map((product) => (\r\n                        <MenuItem\r\n                          key={product._id}\r\n                          value={product.productname}\r\n                          //   style={getStyles(name, personName, theme)}\r\n                        >\r\n                          {product.productname}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    onChange={quantityHandleChange}\r\n                    value={quantity}\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Total Price\"\r\n                    variant=\"outlined\"\r\n                    value={price}\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                  ;\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Payment Mode\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      //={age}\r\n                      label=\"payment mode\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value={10}>COD</MenuItem>\r\n                      <MenuItem value={20}>Credit Card</MenuItem>\r\n                      <MenuItem value={30}>Upi</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                  >\r\n                    Place Order\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}