{"ast":null,"code":"var _jsxFileName = \"D:\\\\piyush\\\\project\\\\Inventory-Management-System\\\\login-and-register-frontend\\\\src\\\\components\\\\pages\\\\dashboard\\\\barchart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport useOrder from \"../../../hooks/useOrder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Barchart = () => {\n  _s();\n\n  const [productName, setproductName] = useState([]);\n  const [quantity, setQuantity] = useState([]);\n  {}\n  const {\n    customerDetails\n  } = useOrder();\n  useEffect(() => {\n    const productname = [];\n    const productquantity = [];\n\n    const getOrderDetails = async () => {\n      for (let i = 0; i < customerDetails.length; i++) {\n        productname.push(customerDetails[i].productName);\n        productquantity.push(parseInt(customerDetails[i].quantity));\n      }\n\n      setproductName(productname);\n      setQuantity(productquantity);\n    };\n\n    getOrderDetails();\n  }, [customerDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      width: 1000,\n      height: 700,\n      series: [{\n        name: \"Customer Order \",\n        data: quantity\n      }],\n      options: {\n        title: {\n          text: \"BarChar\",\n          style: {\n            fontSize: 30\n          }\n        },\n        subtitle: {\n          text: \"This is BarChart Graph\",\n          style: {\n            fontSize: 18\n          }\n        },\n        colors: [\"#f90000\"],\n        theme: {\n          mode: \"light\"\n        },\n        xaxis: {\n          tickPlacement: \"on\",\n          categories: productName,\n          title: {\n            text: \"Customer order User\",\n            style: {\n              color: \"#f90000\",\n              fontSize: 30\n            }\n          }\n        },\n        yaxis: {\n          labels: {\n            formatter: val => {\n              return `${val}`;\n            },\n            style: {\n              fontSize: \"15\",\n              colors: [\"#f90000\"]\n            }\n          },\n          title: {\n            text: \"User In (K)\",\n            style: {\n              color: \"#f90000\",\n              fontSize: 15\n            }\n          }\n        },\n        legend: {\n          show: true,\n          position: \"right\"\n        },\n        dataLabels: {\n          formatter: val => {\n            return `${val}`;\n          },\n          style: {\n            colors: [\"#f4f4f4\"],\n            fontSize: 15\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Barchart, \"vH4lOWYd94EbZlX5WWFqqODI/Vc=\", false, function () {\n  return [useOrder];\n});\n\n_c = Barchart;\nexport default Barchart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/components/pages/dashboard/barchart.jsx"],"names":["React","useState","useEffect","Chart","useOrder","Barchart","productName","setproductName","quantity","setQuantity","customerDetails","productname","productquantity","getOrderDetails","i","length","push","parseInt","name","data","title","text","style","fontSize","subtitle","colors","theme","mode","xaxis","tickPlacement","categories","color","yaxis","labels","formatter","val","legend","show","position","dataLabels"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport useOrder from \"../../../hooks/useOrder\";\r\n\r\nconst Barchart = () => {\r\n  const [productName, setproductName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  {\r\n  }\r\n  const { customerDetails } = useOrder();\r\n  useEffect(() => {\r\n    const productname = [];\r\n    const productquantity = [];\r\n\r\n    const getOrderDetails = async () => {\r\n      for (let i = 0; i < customerDetails.length; i++) {\r\n        productname.push(customerDetails[i].productName);\r\n        productquantity.push(parseInt(customerDetails[i].quantity));\r\n      }\r\n      setproductName(productname);\r\n      setQuantity(productquantity);\r\n    };\r\n    getOrderDetails();\r\n  }, [customerDetails]);\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        type=\"bar\"\r\n        width={1000}\r\n        height={700}\r\n        series={[\r\n          {\r\n            name: \"Customer Order \",\r\n            data: quantity,\r\n          },\r\n        ]}\r\n        options={{\r\n          title: {\r\n            text: \"BarChar\",\r\n            style: { fontSize: 30 },\r\n          },\r\n\r\n          subtitle: {\r\n            text: \"This is BarChart Graph\",\r\n            style: { fontSize: 18 },\r\n          },\r\n\r\n          colors: [\"#f90000\"],\r\n          theme: { mode: \"light\" },\r\n\r\n          xaxis: {\r\n            tickPlacement: \"on\",\r\n            categories: productName,\r\n            title: {\r\n              text: \"Customer order User\",\r\n              style: { color: \"#f90000\", fontSize: 30 },\r\n            },\r\n          },\r\n\r\n          yaxis: {\r\n            labels: {\r\n              formatter: (val) => {\r\n                return `${val}`;\r\n              },\r\n              style: { fontSize: \"15\", colors: [\"#f90000\"] },\r\n            },\r\n            title: {\r\n              text: \"User In (K)\",\r\n              style: { color: \"#f90000\", fontSize: 15 },\r\n            },\r\n          },\r\n\r\n          legend: {\r\n            show: true,\r\n            position: \"right\",\r\n          },\r\n\r\n          dataLabels: {\r\n            formatter: (val) => {\r\n              return `${val}`;\r\n            },\r\n            style: {\r\n              colors: [\"#f4f4f4\"],\r\n              fontSize: 15,\r\n            },\r\n          },\r\n        }}\r\n      ></Chart>\r\n    </div>\r\n  );\r\n};\r\nexport default Barchart;\r\n"]},"metadata":{},"sourceType":"module"}