{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst useFetchInventory = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null); //getting the stock information\n\n  useEffect(() => {\n    setLoading(true);\n\n    try {\n      const fetchData = async () => {\n        const res = await axios.get(\"http://localhost:5000/stockinfo\");\n        setData(res);\n      };\n\n      fetchData();\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n    }\n  }, []);\n  return {\n    loading,\n    data,\n    error\n  };\n};\n\n_s(useFetchInventory, \"YKy+4KnfxUJofG3Bw+JRbDhSZRk=\");\n\nexport default useFetchInventory;","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/hooks/useFetchInventory.js"],"names":["React","useEffect","useState","useFetchInventory","loading","setLoading","data","setData","error","setError","fetchData","res","axios","get","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC,CAH4B,CAK5B;;AACFD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMK,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,iCAAV,CAAlB;AACAN,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD,OAHD;;AAIAD,MAAAA,SAAS;AACZ,KAND,CAME,OAAOF,KAAP,EAAc;AACZH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,QAAQ,CAACD,KAAK,CAACM,OAAP,CAAR;AACH;AAEJ,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAO;AAACV,IAAAA,OAAD;AAAUE,IAAAA,IAAV;AAAgBE,IAAAA;AAAhB,GAAP;AACD,CAtBD;;GAAML,iB;;AAwBN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst useFetchInventory = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    //getting the stock information\r\n  useEffect(() => {\r\n      setLoading(true)\r\n      try {\r\n          const fetchData = async () => {\r\n            const res = await axios.get(\"http://localhost:5000/stockinfo\")\r\n            setData(res)\r\n          }\r\n          fetchData()\r\n      } catch (error) {\r\n          setLoading(false)\r\n          setError(error.message)\r\n      }\r\n    \r\n  }, []);\r\n\r\n  return {loading, data, error}\r\n}\r\n\r\nexport default useFetchInventory"]},"metadata":{},"sourceType":"module"}