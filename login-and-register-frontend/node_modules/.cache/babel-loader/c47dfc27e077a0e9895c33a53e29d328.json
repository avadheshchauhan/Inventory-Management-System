{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetchInventory = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [getproduct, setGetproduct] = useState(false);\n  const token = JSON.parse(localStorage.getItem(\"token\")); //getting the stock information\n\n  useEffect(() => {\n    setLoading(true);\n\n    try {\n      const fetchData = async () => {\n        const res = await axios.get(\"http://localhost:5000/stockinfo\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setData(res.data);\n        setLoading(false);\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error(\"Error: \", error.message);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, [getproduct]); //adding the inventory\n\n  const addProduct = product => {\n    //   setLoading(true)\n    try {\n      const fetchData = async () => {\n        const res = await axios.post(\"http://localhost:5000/addstock\", product, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }); //   if(res.success){\n\n        const newData = [...data];\n        setGetproduct(prev => !prev);\n        newData.push(product);\n        setData(newData); //   }\n        //   setLoading(false)\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error(\"Error: \", error.message);\n      setError(error.message); // setLoading(false)\n    }\n  }; //Delete the inventory\n\n\n  const deleteProduct = index => {\n    try {\n      const fetchData = async e => {\n        const id = data[index]._id;\n        const res = await axios.delete(`http://localhost:5000/deletestock/${id}`);\n        const filter = [...data];\n        filter.splice(index, 1);\n        setData(filter);\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error(\"Error: \", error.message);\n      setError(error.message);\n    }\n  };\n\n  return {\n    loading,\n    data,\n    error,\n    addProduct,\n    deleteProduct\n  };\n};\n\n_s(useFetchInventory, \"v/Adx6p7XSXMLiFc3YmLNHpyaeI=\");\n\nexport default useFetchInventory;","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/hooks/useFetchInventory.js"],"names":["React","useEffect","useState","axios","useFetchInventory","loading","setLoading","data","setData","error","setError","getproduct","setGetproduct","token","JSON","parse","localStorage","getItem","fetchData","res","get","headers","Authorization","console","message","addProduct","product","post","newData","prev","push","deleteProduct","index","e","id","_id","delete","filter","splice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetchInventory = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [getproduct, setGetproduct] = useState(false);\r\n\r\n  const token = JSON.parse(localStorage.getItem(\"token\"));\r\n\r\n  //getting the stock information\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    try {\r\n      const fetchData = async () => {\r\n        const res = await axios.get(\"http://localhost:5000/stockinfo\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setData(res.data);\r\n        setLoading(false);\r\n      };\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  }, [getproduct]);\r\n\r\n  //adding the inventory\r\n\r\n  const addProduct = (product) => {\r\n    //   setLoading(true)\r\n    try {\r\n      const fetchData = async () => {\r\n        const res = await axios.post(\r\n          \"http://localhost:5000/addstock\",\r\n          product,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }\r\n        );\r\n        //   if(res.success){\r\n        const newData = [...data];\r\n        setGetproduct((prev) => !prev);\r\n        newData.push(product);\r\n        setData(newData);\r\n        //   }\r\n        //   setLoading(false)\r\n      };\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      setError(error.message);\r\n      // setLoading(false)\r\n    }\r\n  };\r\n\r\n  //Delete the inventory\r\n  const deleteProduct = (index) => {\r\n    try {\r\n      const fetchData = async (e) => {\r\n        const id = data[index]._id;\r\n        const res = await axios.delete(\r\n          `http://localhost:5000/deletestock/${id}`\r\n        );\r\n        const filter = [...data];\r\n        filter.splice(index, 1);\r\n        setData(filter);\r\n      };\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return { loading, data, error, addProduct, deleteProduct };\r\n};\r\n\r\nexport default useFetchInventory;\r\n"]},"metadata":{},"sourceType":"module"}