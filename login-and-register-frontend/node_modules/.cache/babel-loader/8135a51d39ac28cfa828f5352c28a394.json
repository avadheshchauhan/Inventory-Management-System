{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useFetchInventory = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null); //getting the stock information\n\n  useEffect(() => {\n    setLoading(true);\n\n    try {\n      const fetchData = async () => {\n        const res = await axios.get(\"http://localhost:5000/stockinfo\");\n        setData(res.data);\n        setLoading(false);\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error('Error: ', error.message);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, []);\n\n  const addProduct = product => {\n    //   setLoading(true)\n    try {\n      const fetchData = async () => {\n        const res = await axios.post(\"http://localhost:5000/addstock\", product); //   if(res.success){\n\n        const newData = [...data];\n        newData.push(product);\n        setData(newData); //   }\n        //   setLoading(false)\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error('Error: ', error.message);\n      setError(error.message); // setLoading(false)\n    }\n  };\n\n  return {\n    loading,\n    data,\n    error,\n    addProduct\n  };\n};\n\n_s(useFetchInventory, \"YKy+4KnfxUJofG3Bw+JRbDhSZRk=\");\n\nexport default useFetchInventory;","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/hooks/useFetchInventory.js"],"names":["React","useEffect","useState","axios","useFetchInventory","loading","setLoading","data","setData","error","setError","fetchData","res","get","console","message","addProduct","product","post","newData","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAH4B,CAK5B;;AACFD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMK,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,iCAAV,CAAlB;AACAL,QAAAA,OAAO,CAACI,GAAG,CAACL,IAAL,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJD;;AAKAK,MAAAA,SAAS;AACZ,KAPD,CAOE,OAAOF,KAAP,EAAc;AACZK,MAAAA,OAAO,CAACL,KAAR,CAAc,SAAd,EAAyBA,KAAK,CAACM,OAA/B;AACAL,MAAAA,QAAQ,CAACD,KAAK,CAACM,OAAP,CAAR;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMU,UAAU,GAAIC,OAAD,IAAa;AAC9B;AACA,QAAI;AACA,YAAMN,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMT,KAAK,CAACe,IAAN,CAAW,gCAAX,EAA6CD,OAA7C,CAAlB,CAD4B,CAE9B;;AACQ,cAAME,OAAO,GAAG,CAAC,GAAGZ,IAAJ,CAAhB;AACAY,QAAAA,OAAO,CAACC,IAAR,CAAaH,OAAb;AACAT,QAAAA,OAAO,CAACW,OAAD,CAAP,CALsB,CAM9B;AACA;AACC,OARD;;AASAR,MAAAA,SAAS;AACZ,KAXD,CAWE,OAAOF,KAAP,EAAc;AACZK,MAAAA,OAAO,CAACL,KAAR,CAAc,SAAd,EAAyBA,KAAK,CAACM,OAA/B;AACAL,MAAAA,QAAQ,CAACD,KAAK,CAACM,OAAP,CAAR,CAFY,CAGZ;AACH;AACF,GAlBD;;AAoBA,SAAO;AAACV,IAAAA,OAAD;AAAUE,IAAAA,IAAV;AAAgBE,IAAAA,KAAhB;AAAuBO,IAAAA;AAAvB,GAAP;AACD,CA3CD;;GAAMZ,iB;;AA6CN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useFetchInventory = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    //getting the stock information\r\n  useEffect(() => {\r\n      setLoading(true)\r\n      try {\r\n          const fetchData = async () => {\r\n            const res = await axios.get(\"http://localhost:5000/stockinfo\")\r\n            setData(res.data)\r\n            setLoading(false)\r\n          }\r\n          fetchData()\r\n      } catch (error) {\r\n          console.error('Error: ', error.message)\r\n          setError(error.message)\r\n          setLoading(false)\r\n      }\r\n  }, []);\r\n\r\n  const addProduct = (product) => {\r\n    //   setLoading(true)\r\n    try {\r\n        const fetchData = async () => {\r\n          const res = await axios.post(\"http://localhost:5000/addstock\", product)\r\n        //   if(res.success){\r\n                const newData = [...data]\r\n                newData.push(product)\r\n                setData(newData)\r\n        //   }\r\n        //   setLoading(false)\r\n        }\r\n        fetchData()\r\n    } catch (error) {\r\n        console.error('Error: ', error.message)\r\n        setError(error.message)\r\n        // setLoading(false)\r\n    }\r\n  }\r\n\r\n  return {loading, data, error, addProduct}\r\n}\r\n\r\nexport default useFetchInventory"]},"metadata":{},"sourceType":"module"}