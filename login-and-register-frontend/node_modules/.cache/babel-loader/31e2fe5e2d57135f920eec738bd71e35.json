{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useFetchInventory = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [getproduct, setGetproduct] = useState(false); //getting the stock information\n\n  useEffect(() => {\n    setLoading(true);\n\n    try {\n      const fetchData = async () => {\n        const res = await axios.get(\"http://localhost:5000/stockinfo\");\n        setData(res.data);\n        setLoading(false);\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error('Error: ', error.message);\n      setError(error.message);\n      setLoading(false);\n    }\n  }, []);\n\n  const addProduct = product => {\n    //   setLoading(true)\n    try {\n      const fetchData = async e => {\n        const res = await axios.post(\"http://localhost:5000/addstock\", product); //   if(res.success){\n\n        const newData = [...data];\n        newData.push(product);\n        setData(newData); //   }\n        //   setLoading(false)\n      };\n\n      fetchData();\n    } catch (error) {\n      console.error('Error: ', error.message);\n      setError(error.message); // setLoading(false)\n    }\n  };\n\n  return {\n    loading,\n    data,\n    error,\n    addProduct\n  };\n};\n\n_s(useFetchInventory, \"TrVN3RXunEQ9vtQZTvOsw6BwpRY=\");\n\nexport default useFetchInventory;","map":{"version":3,"sources":["D:/piyush/project/Inventory-Management-System/login-and-register-frontend/src/hooks/useFetchInventory.js"],"names":["React","useEffect","useState","axios","useFetchInventory","loading","setLoading","data","setData","error","setError","getproduct","setGetproduct","fetchData","res","get","console","message","addProduct","product","e","post","newData","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,UAAD,EAAYC,aAAZ,IAA2BV,QAAQ,CAAC,KAAD,CAAzC,CAJ4B,CAM5B;;AACFD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMO,SAAS,GAAG,YAAY;AAC5B,cAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,iCAAV,CAAlB;AACAP,QAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJD;;AAKAO,MAAAA,SAAS;AACZ,KAPD,CAOE,OAAOJ,KAAP,EAAc;AACZO,MAAAA,OAAO,CAACP,KAAR,CAAc,SAAd,EAAyBA,KAAK,CAACQ,OAA/B;AACAP,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAdQ,EAcN,EAdM,CAAT;;AAgBA,QAAMY,UAAU,GAAIC,OAAD,IAAa;AAC9B;AACA,QAAI;AACA,YAAMN,SAAS,GAAG,MAAOO,CAAP,IAAa;AAE7B,cAAMN,GAAG,GAAG,MAAMX,KAAK,CAACkB,IAAN,CAAW,gCAAX,EAA6CF,OAA7C,CAAlB,CAF6B,CAG/B;;AACQ,cAAMG,OAAO,GAAG,CAAC,GAAGf,IAAJ,CAAhB;AACAe,QAAAA,OAAO,CAACC,IAAR,CAAaJ,OAAb;AACAX,QAAAA,OAAO,CAACc,OAAD,CAAP,CANuB,CAO/B;AACA;AACC,OATD;;AAUAT,MAAAA,SAAS;AACZ,KAZD,CAYE,OAAOJ,KAAP,EAAc;AACZO,MAAAA,OAAO,CAACP,KAAR,CAAc,SAAd,EAAyBA,KAAK,CAACQ,OAA/B;AACAP,MAAAA,QAAQ,CAACD,KAAK,CAACQ,OAAP,CAAR,CAFY,CAGZ;AACH;AACF,GAnBD;;AAuBA,SAAO;AAACZ,IAAAA,OAAD;AAAUE,IAAAA,IAAV;AAAgBE,IAAAA,KAAhB;AAAuBS,IAAAA;AAAvB,GAAP;AACD,CA/CD;;GAAMd,iB;;AAiDN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useFetchInventory = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [getproduct,setGetproduct]=useState(false)\r\n\r\n    //getting the stock information\r\n  useEffect(() => {\r\n      setLoading(true)\r\n      try {\r\n          const fetchData = async () => {\r\n            const res = await axios.get(\"http://localhost:5000/stockinfo\")\r\n            setData(res.data)\r\n            setLoading(false)\r\n          }\r\n          fetchData()\r\n      } catch (error) {\r\n          console.error('Error: ', error.message)\r\n          setError(error.message)\r\n          setLoading(false)\r\n      }\r\n  }, []);\r\n\r\n  const addProduct = (product) => {\r\n    //   setLoading(true)\r\n    try {\r\n        const fetchData = async (e) => {\r\n        \r\n          const res = await axios.post(\"http://localhost:5000/addstock\", product)\r\n        //   if(res.success){\r\n                const newData = [...data]\r\n                newData.push(product)\r\n                setData(newData)\r\n        //   }\r\n        //   setLoading(false)\r\n        }\r\n        fetchData()\r\n    } catch (error) {\r\n        console.error('Error: ', error.message)\r\n        setError(error.message)\r\n        // setLoading(false)\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return {loading, data, error, addProduct}\r\n}\r\n\r\nexport default useFetchInventory"]},"metadata":{},"sourceType":"module"}