[{"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\index.js":"1","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\App.js":"2","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\routes\\Routes.jsx":"3","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\header\\Header.jsx":"4","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx":"5","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx":"6","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx":"7","D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx":"8","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\index.js":"9","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\App.js":"10","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\header\\Header.jsx":"11","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx":"12","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx":"13","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx":"14","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx":"15","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\routes\\Routes.jsx":"16","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\customer\\Customer.jsx":"17","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\inventory\\Inventory.jsx":"18","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\order\\Order.jsx":"19","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\Dashboard.jsx":"20"},{"size":268,"mtime":1652537431713,"results":"21","hashOfConfig":"22"},{"size":354,"mtime":1652537431697,"results":"23","hashOfConfig":"22"},{"size":811,"mtime":1652544257905,"results":"24","hashOfConfig":"22"},{"size":2152,"mtime":1652537431698,"results":"25","hashOfConfig":"22"},{"size":2925,"mtime":1652551379755,"results":"26","hashOfConfig":"22"},{"size":522,"mtime":1652537431701,"results":"27","hashOfConfig":"22"},{"size":3227,"mtime":1652549890297,"results":"28","hashOfConfig":"22"},{"size":5716,"mtime":1652537431708,"results":"29","hashOfConfig":"22"},{"size":268,"mtime":1652537431713,"results":"30","hashOfConfig":"31"},{"size":335,"mtime":1652598347425,"results":"32","hashOfConfig":"31"},{"size":3688,"mtime":1652610372356,"results":"33","hashOfConfig":"31"},{"size":2934,"mtime":1652610214195,"results":"34","hashOfConfig":"31"},{"size":522,"mtime":1652537431701,"results":"35","hashOfConfig":"31"},{"size":3231,"mtime":1652610652292,"results":"36","hashOfConfig":"31"},{"size":5847,"mtime":1652611253488,"results":"37","hashOfConfig":"31"},{"size":1307,"mtime":1652610031767,"results":"38","hashOfConfig":"31"},{"size":116,"mtime":1652597939932,"results":"39","hashOfConfig":"31"},{"size":140,"mtime":1652598001666,"results":"40","hashOfConfig":"31"},{"size":6762,"mtime":1652617981216,"results":"41","hashOfConfig":"31"},{"size":137,"mtime":1652609818455,"results":"42","hashOfConfig":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lob3eg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g9hq4e",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\index.js",[],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\App.js",[],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\routes\\Routes.jsx",["87"],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\header\\Header.jsx",["88","89","90","91"],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx",["92"],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx",[],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx",[],"D:\\FinalProject\\react-inventory\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx",["93","94","95"],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\index.js",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\App.js",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\header\\Header.jsx",["96","97","98","99","100","101","102","103"],"import { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport InventoryIcon from '@mui/icons-material/Inventory';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst HeaderPage = () => {\r\n    const location = useLocation()\r\n    console.log(location.pathname);\r\n    return (\r\n        <>\r\n            <div>\r\n                \r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <InventoryIcon />\r\n                        {location.pathname == \"/user\" || location.pathname == \"/dashboard\" || location.pathname == \"/order\" || location.pathname == \"/customer\" || location.pathname == \"/inventory\"  ?\r\n                            <>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"dashboard\">DashBoard</Link>\r\n\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"inventory\">Inventory</Link>\r\n\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"order\">Order</Link>\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"customer\">Customer</Link>\r\n\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/user\">User</Link>\r\n\r\n                                </Typography>\r\n                                {console.log(\"here\")}\r\n                                <Button variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ marginLeft: \"auto\", bgcolor: 'secondary.main' }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\">Logout</Link>\r\n                                </Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {console.log(\"here i am \")}\r\n                                <Button variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ marginLeft: \"auto\", bgcolor: 'secondary.main', }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"login\">Login</Link>\r\n                                </Button>\r\n\r\n                                <Button variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ marginLeft: \"10px\", bgcolor: 'secondary.main' }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"register\">Register</Link>\r\n                                </Button>\r\n                            </>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderPage;","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx",["104"],"import { Button, TextField, Typography } from \"@mui/material\"\r\nimport style from \"./Loginpage.module.css\"\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LoginPage = ({setUser}) => {\r\n    let navigate = useNavigate();\r\n    const[error,setError]=useState()\r\n    const [loginuser, setLoginuser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const onchangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setLoginuser({\r\n            ...loginuser,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        const { email, password } = loginuser\r\n        \r\n        if (email && password) {\r\n            axios.post(\"http://localhost:4000/login\", loginuser)\r\n    \r\n               .then((res)=>{\r\n               // console.log(JSON.parse(localStorage.getItem(\"userInfo\")));        \r\n                console.log(\"user login succesfully\",res.data)\r\n                    // setUser(res.data)\r\n                    if(res.status===200){\r\n                        localStorage.setItem('userInfo', JSON.stringify(res.data.email))\r\n                        navigate(\"/dashboard\")\r\n                    }\r\n                    \r\n                }).catch((err)=>{\r\n                    setError(\"User not found\")\r\n                    console.log(\"error msg\",err)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n                    <form className={style.route}>\r\n                <div className={style.form}>\r\n                    <Typography variant=\"h3\">Login</Typography><br />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                        label=\"Email Id\"\r\n                        type=\"email\"\r\n                        color=\"secondary\"\r\n                        name=\"email\"\r\n                        value={loginuser.email}\r\n                        onChange={onchangeHandler}\r\n                        placeholder=\"Enter your EmailId\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        required /> <br /><br />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        color=\"secondary\"\r\n                        name=\"password\"\r\n                        value={loginuser.password}\r\n                        onChange={onchangeHandler}\r\n                        placeholder=\"Enter your password\"\r\n                        fullWidth variant=\"outlined\"\r\n                        required /> <br />\r\n\r\n                    <Button size=\"large\" sx={{ marginTop: \"20px\" }} onClick={loginHandler} variant=\"contained\">Login</Button>\r\n                    <p>{error}</p>\r\n                </div>\r\n\r\n            </form>\r\n            {console.log(loginuser)}\r\n            \r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default LoginPage;","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx",[],["105","106"],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx",["107","108","109","110","111","112","113"],"import { TextField, Typography, Button } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport {  useState, useEffect } from \"react\"\r\nimport style from \"./user.module.css\"\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nconst User = () => {\r\n    let navigate = useNavigate();\r\n    const[error,setError]=useState()\r\n    const [user, setUser] = useState({\r\n        fullname: '',\r\n        email: \"\",\r\n        address: \"\",\r\n        mobileNo: \"\",\r\n        phoneNo: \"\",\r\n        //uploadedfile:null\r\n        \r\n    })\r\n\r\n   /* const profileimageHandler=(e)=>{\r\n       console.log(e.target.files[0])\r\n         setUser({...user,uploadedfile:e.target.files[0]})\r\n    }\r\n*/\r\n\r\n   // console.log(user.phoneNo)\r\n    //const email= JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    // useEffect(()=>{\r\n    //     const fetchdata=async()=>{\r\n    //         await axios.get(`http://localhost:4000/updateprofile/${email}`)\r\n    //         .then((res)=>{\r\n    //             console.log(res.data)\r\n               \r\n    //             setUser({fullname:res.data.fullname,\r\n    //                 email:res.data.email,\r\n    //                 address:res.data.address,\r\n    //                 mobileNo:res.data.mobileNo,\r\n    //                 phoneNo:res.data.phoneNo})\r\n    //         }).catch((err)=>{\r\n    //             console.log(err)\r\n    //         })\r\n    //     }\r\n    //     fetchdata();\r\n    // },[email]) \r\n\r\n//     const updateHandler=()=>{\r\n//         if(user){\r\n//             console.log(\"...user\",user)\r\n//         //     var formData= new FormData();\r\n//         //     // console.log(\"....\",user.uploadedfile,\"-------\",user.uploadedfile.name)\r\n//         //     //formData.append('uploadfile',user.uploadedfile,user.uploadedfile.name)\r\n//         //     formData.append(\"fullname\",\"abc\")\r\n//         //     formData.append(\"email\",user.email)\r\n//         //     formData.append(\"mobileNo\",user.mobileNo)\r\n//         //     formData.append(\"phoneNo\",user.phoneNo)\r\n//         //     formData.append(\"address\",user.address)\r\n//         //    // var options = { content: formData };\r\n           \r\n//              axios.post(`http://localhost:4000/updateprofile/${email}`,user)\r\n//             .then((res)=>{\r\n//              localStorage.setItem('userInfo', JSON.stringify(res.data))\r\n//                console.log(res.data)\r\n//                  navigate(\"/user\")\r\n//              }).catch((err)=>{\r\n//                  setError(\"User not found\")\r\n//                  console.log(\"error msg\",err)\r\n//              })\r\n//         }\r\n        \r\n//  }\r\n    \r\n   \r\n\r\n    const onchangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div className={style.form}>\r\n            <form  className={style.bodyform} >\r\n                <Typography variant=\"h3\">My Profile</Typography>\r\n                <div className={style.img}>\r\n                <img src=\"\"></img>\r\n                </div>\r\n                <label>Full Name</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Full Name\"\r\n                    name=\"fullname\"\r\n                   // value={user.fullname}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    onChange={onchangeHandler}\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Full Name\"\r\n                    variant=\"outlined\" />\r\n                <label > PhoneNumber</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"PhoneNumber\"\r\n                    name=\"phoneNo\"\r\n                   // value={user.phoneNo}\r\n                    type=\"text\"\r\n                    onChange={onchangeHandler}\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your phoneNo\"\r\n                    variant=\"outlined\" />\r\n                <label >MobileNo</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"MobileNo\"\r\n                    name=\"mobileNo\"\r\n                   // value={user.mobileNo}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your MobileNo\"\r\n                    variant=\"outlined\" />\r\n                <label htmlFor=\"\">Email</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                  //  value={user.email}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Email\"\r\n                    variant=\"outlined\" />\r\n                <label>Address</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                   // value={user.address}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Address\"\r\n                    variant=\"outlined\" />\r\n                <label>Profile Image</label>\r\n                <div>\r\n                <input type=\"file\"     name=\"uploadfile\"/>\r\n                </div>\r\n\r\n                <Button size=\"large\" sx={{ marginTop: \"20px\" }}   variant=\"contained\">UpdateProfile</Button>\r\n            </form>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default User","D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\routes\\Routes.jsx",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\customer\\Customer.jsx",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\inventory\\Inventory.jsx",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\order\\Order.jsx",[],"D:\\Inventory Management System\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\Dashboard.jsx",[],{"ruleId":"114","severity":1,"message":"115","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":22},{"ruleId":"114","severity":1,"message":"119","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":19},{"ruleId":"114","severity":1,"message":"120","line":6,"column":21,"nodeType":"116","messageId":"117","endLine":6,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":17,"column":44,"nodeType":"123","messageId":"124","endLine":17,"endColumn":46},{"ruleId":"114","severity":1,"message":"118","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"125","line":8,"column":11,"nodeType":"116","messageId":"117","endLine":8,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":85,"column":17,"nodeType":"128","endLine":85,"endColumn":29},{"ruleId":"114","severity":1,"message":"118","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":22},{"ruleId":"114","severity":1,"message":"119","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":19},{"ruleId":"114","severity":1,"message":"120","line":6,"column":21,"nodeType":"116","messageId":"117","endLine":6,"endColumn":29},{"ruleId":"121","severity":1,"message":"122","line":19,"column":44,"nodeType":"123","messageId":"124","endLine":19,"endColumn":46},{"ruleId":"121","severity":1,"message":"122","line":19,"column":76,"nodeType":"123","messageId":"124","endLine":19,"endColumn":78},{"ruleId":"121","severity":1,"message":"122","line":19,"column":113,"nodeType":"123","messageId":"124","endLine":19,"endColumn":115},{"ruleId":"121","severity":1,"message":"122","line":19,"column":146,"nodeType":"123","messageId":"124","endLine":19,"endColumn":148},{"ruleId":"121","severity":1,"message":"122","line":19,"column":182,"nodeType":"123","messageId":"124","endLine":19,"endColumn":184},{"ruleId":"114","severity":1,"message":"118","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"114","severity":1,"message":"133","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"119","line":3,"column":21,"nodeType":"116","messageId":"117","endLine":3,"endColumn":30},{"ruleId":"114","severity":1,"message":"118","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"134","line":7,"column":9,"nodeType":"116","messageId":"117","endLine":7,"endColumn":17},{"ruleId":"114","severity":1,"message":"125","line":8,"column":11,"nodeType":"116","messageId":"117","endLine":8,"endColumn":16},{"ruleId":"114","severity":1,"message":"135","line":8,"column":17,"nodeType":"116","messageId":"117","endLine":8,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":85,"column":17,"nodeType":"128","endLine":85,"endColumn":29},"no-unused-vars","'HeaderPage' is defined but never used.","Identifier","unusedVar","'Outlet' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'axios' is defined but never used.","'navigate' is assigned a value but never used.","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]