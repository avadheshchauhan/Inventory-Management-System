[{"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\index.js":"1","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\App.js":"2","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\routes\\Routes.jsx":"3","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\header\\Header.jsx":"4","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\Dashboard.jsx":"5","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\inventory\\Inventory.jsx":"6","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx":"7","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\customer\\Customer.jsx":"8","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\order\\Order.jsx":"9","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx":"10","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx":"11","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx":"12","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useFetchInventory.js":"13","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useOrder.js":"14"},{"size":268,"mtime":1652678818729,"results":"15","hashOfConfig":"16"},{"size":335,"mtime":1652678818717,"results":"17","hashOfConfig":"16"},{"size":1307,"mtime":1652678818729,"results":"18","hashOfConfig":"16"},{"size":3688,"mtime":1652678818719,"results":"19","hashOfConfig":"16"},{"size":137,"mtime":1652678818721,"results":"20","hashOfConfig":"16"},{"size":5802,"mtime":1652872775015,"results":"21","hashOfConfig":"16"},{"size":522,"mtime":1652678818722,"results":"22","hashOfConfig":"16"},{"size":3850,"mtime":1652947963858,"results":"23","hashOfConfig":"16"},{"size":8169,"mtime":1652944804452,"results":"24","hashOfConfig":"16"},{"size":2934,"mtime":1652845816322,"results":"25","hashOfConfig":"16"},{"size":3031,"mtime":1652845921757,"results":"26","hashOfConfig":"16"},{"size":5847,"mtime":1652678818728,"results":"27","hashOfConfig":"16"},{"size":2058,"mtime":1652867493719,"results":"28","hashOfConfig":"16"},{"size":1351,"mtime":1652947595831,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1olcq8o",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\index.js",[],["64","65"],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\App.js",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\routes\\Routes.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\header\\Header.jsx",["66","67","68","69","70","71","72","73"],"import { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport InventoryIcon from '@mui/icons-material/Inventory';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nconst HeaderPage = () => {\r\n    const location = useLocation()\r\n    console.log(location.pathname);\r\n    return (\r\n        <>\r\n            <div>\r\n                \r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <InventoryIcon />\r\n                        {location.pathname == \"/user\" || location.pathname == \"/dashboard\" || location.pathname == \"/order\" || location.pathname == \"/customer\" || location.pathname == \"/inventory\"  ?\r\n                            <>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"dashboard\">DashBoard</Link>\r\n\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"inventory\">Inventory</Link>\r\n\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"order\">Order</Link>\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"customer\">Customer</Link>\r\n\r\n                                </Typography>\r\n                                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/user\">User</Link>\r\n\r\n                                </Typography>\r\n                                {console.log(\"here\")}\r\n                                <Button variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ marginLeft: \"auto\", bgcolor: 'secondary.main' }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\">Logout</Link>\r\n                                </Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {console.log(\"here i am \")}\r\n                                <Button variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ marginLeft: \"auto\", bgcolor: 'secondary.main', }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"login\">Login</Link>\r\n                                </Button>\r\n\r\n                                <Button variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ marginLeft: \"10px\", bgcolor: 'secondary.main' }}>\r\n                                    <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"register\">Register</Link>\r\n                                </Button>\r\n                            </>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderPage;","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\Dashboard.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\inventory\\Inventory.jsx",["74"],"import { Button, Grid, TextField, Typography } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport useFetchInventory from \"../../../hooks/useFetchInventory\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Inventory = () => {\r\n  const [product, setProduct] = useState({\r\n    productname: \"\",\r\n    quantity: \"\",\r\n    price: \"\",\r\n  });\r\n\r\n  const { loading, data, error, addProduct, deleteProduct } =\r\n    useFetchInventory();\r\n\r\n  const productHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct({\r\n      ...product,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  //adding the stockHandler\r\n  const addProductHandler = (e) => {\r\n    e.preventDefault();\r\n    addProduct(product);\r\n    setProduct({\r\n      productname: \"\",\r\n      quantity: \"\",\r\n      price: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteProductHandler = (index) => {\r\n    deleteProduct(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography>Add Product</Typography>\r\n\r\n      <form onSubmit={addProductHandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid xs={12} sm={6} item>\r\n            <TextField\r\n              placeholder=\"Enter Product name\"\r\n              label=\"Product Name\"\r\n              name=\"productname\"\r\n              value={product.productname}\r\n              variant=\"outlined\"\r\n              onChange={productHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid xs={12} sm={6} item>\r\n            <TextField\r\n              type=\"number\"\r\n              placeholder=\"Enter Quantity of product\"\r\n              name=\"quantity\"\r\n              value={product.quantity}\r\n              label=\"Quantity\"\r\n              variant=\"outlined\"\r\n              onChange={productHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid xs={12} sm={6} item>\r\n            <TextField\r\n              type=\"number\"\r\n              name=\"price\"\r\n              value={product.price}\r\n              placeholder=\"Enter Price of product\"\r\n              label=\"Price\"\r\n              variant=\"outlined\"\r\n              onChange={productHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Add Product\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Typography>Inventory Stock</Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Sr.No</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Product Id</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Product Name</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Product Price</StyledTableCell>\r\n              <StyledTableCell align=\"left\"> Qty</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Total Price</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Delete</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : error ? (\r\n            <p>{error}</p>\r\n          ) : (\r\n            <TableBody>\r\n              {data.map((stock, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {index + 1}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    SKU000{index + 1}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    {stock.productname}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{stock.price}</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"left\">\r\n                    {stock.totalQuantity}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    {stock.totalprice}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    <Tooltip title=\"Delete\">\r\n                      <IconButton>\r\n                        <DeleteIcon\r\n                          onClick={() => deleteProductHandler(index)}\r\n                        />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\customer\\Customer.jsx",["75","76","77","78","79","80","81","82"],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\order\\Order.jsx",["83","84","85","86","87"],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx",["88"],"import { Button, TextField, Typography } from \"@mui/material\"\r\nimport style from \"./Loginpage.module.css\"\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst LoginPage = ({setUser}) => {\r\n    let navigate = useNavigate();\r\n    const[error,setError]=useState()\r\n    const [loginuser, setLoginuser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const onchangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setLoginuser({\r\n            ...loginuser,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        const { email, password } = loginuser\r\n        \r\n        if (email && password) {\r\n            axios.post(\"http://localhost:5000/login\", loginuser)\r\n    \r\n               .then((res)=>{\r\n               // console.log(JSON.parse(localStorage.getItem(\"userInfo\")));        \r\n                console.log(\"user login succesfully\",res.data)\r\n                    // setUser(res.data)\r\n                    if(res.status===201){\r\n                        localStorage.setItem('userInfo', JSON.stringify(res.data.email))\r\n                        navigate(\"/dashboard\")\r\n                    }\r\n                    \r\n                }).catch((err)=>{\r\n                    setError(\"User not found\")\r\n                    console.log(\"error msg\",err)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n                    <form className={style.route}>\r\n                <div className={style.form}>\r\n                    <Typography variant=\"h3\">Login</Typography><br />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                        label=\"Email Id\"\r\n                        type=\"email\"\r\n                        color=\"secondary\"\r\n                        name=\"email\"\r\n                        value={loginuser.email}\r\n                        onChange={onchangeHandler}\r\n                        placeholder=\"Enter your EmailId\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        required /> <br /><br />\r\n\r\n                    <TextField id=\"outlined-basic\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        color=\"secondary\"\r\n                        name=\"password\"\r\n                        value={loginuser.password}\r\n                        onChange={onchangeHandler}\r\n                        placeholder=\"Enter your password\"\r\n                        fullWidth variant=\"outlined\"\r\n                        required /> <br />\r\n\r\n                    <Button size=\"large\" sx={{ marginTop: \"20px\" }} onClick={loginHandler} variant=\"contained\">Login</Button>\r\n                    <p>{error}</p>\r\n                </div>\r\n\r\n            </form>\r\n            {console.log(loginuser)}\r\n            \r\n        </>\r\n\r\n\r\n    )\r\n}\r\nexport default LoginPage;","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx",["89","90","91","92","93","94","95"],"import { TextField, Typography, Button } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport {  useState, useEffect } from \"react\"\r\nimport style from \"./user.module.css\"\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nconst User = () => {\r\n    let navigate = useNavigate();\r\n    const[error,setError]=useState()\r\n    const [user, setUser] = useState({\r\n        fullname: '',\r\n        email: \"\",\r\n        address: \"\",\r\n        mobileNo: \"\",\r\n        phoneNo: \"\",\r\n        //uploadedfile:null\r\n        \r\n    })\r\n\r\n   /* const profileimageHandler=(e)=>{\r\n       console.log(e.target.files[0])\r\n         setUser({...user,uploadedfile:e.target.files[0]})\r\n    }\r\n*/\r\n\r\n   // console.log(user.phoneNo)\r\n    //const email= JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    // useEffect(()=>{\r\n    //     const fetchdata=async()=>{\r\n    //         await axios.get(`http://localhost:4000/updateprofile/${email}`)\r\n    //         .then((res)=>{\r\n    //             console.log(res.data)\r\n               \r\n    //             setUser({fullname:res.data.fullname,\r\n    //                 email:res.data.email,\r\n    //                 address:res.data.address,\r\n    //                 mobileNo:res.data.mobileNo,\r\n    //                 phoneNo:res.data.phoneNo})\r\n    //         }).catch((err)=>{\r\n    //             console.log(err)\r\n    //         })\r\n    //     }\r\n    //     fetchdata();\r\n    // },[email]) \r\n\r\n//     const updateHandler=()=>{\r\n//         if(user){\r\n//             console.log(\"...user\",user)\r\n//         //     var formData= new FormData();\r\n//         //     // console.log(\"....\",user.uploadedfile,\"-------\",user.uploadedfile.name)\r\n//         //     //formData.append('uploadfile',user.uploadedfile,user.uploadedfile.name)\r\n//         //     formData.append(\"fullname\",\"abc\")\r\n//         //     formData.append(\"email\",user.email)\r\n//         //     formData.append(\"mobileNo\",user.mobileNo)\r\n//         //     formData.append(\"phoneNo\",user.phoneNo)\r\n//         //     formData.append(\"address\",user.address)\r\n//         //    // var options = { content: formData };\r\n           \r\n//              axios.post(`http://localhost:4000/updateprofile/${email}`,user)\r\n//             .then((res)=>{\r\n//              localStorage.setItem('userInfo', JSON.stringify(res.data))\r\n//                console.log(res.data)\r\n//                  navigate(\"/user\")\r\n//              }).catch((err)=>{\r\n//                  setError(\"User not found\")\r\n//                  console.log(\"error msg\",err)\r\n//              })\r\n//         }\r\n        \r\n//  }\r\n    \r\n   \r\n\r\n    const onchangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div className={style.form}>\r\n            <form  className={style.bodyform} >\r\n                <Typography variant=\"h3\">My Profile</Typography>\r\n                <div className={style.img}>\r\n                <img src=\"\"></img>\r\n                </div>\r\n                <label>Full Name</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Full Name\"\r\n                    name=\"fullname\"\r\n                   // value={user.fullname}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    onChange={onchangeHandler}\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Full Name\"\r\n                    variant=\"outlined\" />\r\n                <label > PhoneNumber</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"PhoneNumber\"\r\n                    name=\"phoneNo\"\r\n                   // value={user.phoneNo}\r\n                    type=\"text\"\r\n                    onChange={onchangeHandler}\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your phoneNo\"\r\n                    variant=\"outlined\" />\r\n                <label >MobileNo</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"MobileNo\"\r\n                    name=\"mobileNo\"\r\n                   // value={user.mobileNo}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your MobileNo\"\r\n                    variant=\"outlined\" />\r\n                <label htmlFor=\"\">Email</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                  //  value={user.email}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Email\"\r\n                    variant=\"outlined\" />\r\n                <label>Address</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                   // value={user.address}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Address\"\r\n                    variant=\"outlined\" />\r\n                <label>Profile Image</label>\r\n                <div>\r\n                <input type=\"file\"     name=\"uploadfile\"/>\r\n                </div>\r\n\r\n                <Button size=\"large\" sx={{ marginTop: \"20px\" }}   variant=\"contained\">UpdateProfile</Button>\r\n            </form>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default User","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useFetchInventory.js",["96","97","98"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useFetchInventory = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [getproduct,setGetproduct]=useState(false)\r\n   \r\n    //getting the stock information\r\n  useEffect(() => {\r\n      setLoading(true)\r\n      try {\r\n          const fetchData = async () => {\r\n            const res = await axios.get(\"http://localhost:5000/stockinfo\")\r\n            setData(res.data)\r\n            setLoading(false)\r\n          }\r\n          fetchData()\r\n      } catch (error) {\r\n          console.error('Error: ', error.message)\r\n          setError(error.message)\r\n          setLoading(false)\r\n      }\r\n  }, [getproduct]);\r\n\r\n  const addProduct = (product) => {\r\n    //   setLoading(true)\r\n    try {\r\n        const fetchData = async (e) => {\r\n        \r\n          const res = await axios.post(\"http://localhost:5000/addstock\", product)\r\n        //   if(res.success){\r\n                const newData = [...data]\r\n                setGetproduct((prev)=>!prev)\r\n                newData.push(product)\r\n                setData(newData)\r\n        //   }\r\n        //   setLoading(false)\r\n        }\r\n        fetchData()\r\n    } catch (error) {\r\n        console.error('Error: ', error.message)\r\n        setError(error.message)\r\n        // setLoading(false)\r\n    }\r\n  }\r\n    const deleteProduct = (index) => {\r\n      \r\n      try {\r\n          const fetchData = async (e) => {\r\n            const id = data[index]._id;\r\n            const res = await axios.delete(`http://localhost:5000/deletestock/${id}`)\r\n            const filter = [...data];\r\n            filter.splice(index, 1);\r\n            setData(filter);\r\n         \r\n          }\r\n          fetchData()\r\n      } catch (error) {\r\n          console.error('Error: ', error.message)\r\n          setError(error.message)\r\n        \r\n      }\r\n    }\r\n\r\n  \r\n  \r\n  return {loading, data, error,addProduct,deleteProduct}\r\n}\r\n\r\nexport default useFetchInventory;","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useOrder.js",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":22},{"ruleId":"105","severity":1,"message":"109","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":19},{"ruleId":"105","severity":1,"message":"110","line":6,"column":21,"nodeType":"107","messageId":"108","endLine":6,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":19,"column":44,"nodeType":"113","messageId":"114","endLine":19,"endColumn":46},{"ruleId":"111","severity":1,"message":"112","line":19,"column":76,"nodeType":"113","messageId":"114","endLine":19,"endColumn":78},{"ruleId":"111","severity":1,"message":"112","line":19,"column":113,"nodeType":"113","messageId":"114","endLine":19,"endColumn":115},{"ruleId":"111","severity":1,"message":"112","line":19,"column":146,"nodeType":"113","messageId":"114","endLine":19,"endColumn":148},{"ruleId":"111","severity":1,"message":"112","line":19,"column":182,"nodeType":"113","messageId":"114","endLine":19,"endColumn":184},{"ruleId":"105","severity":1,"message":"115","line":12,"column":8,"nodeType":"107","messageId":"108","endLine":12,"endColumn":13},{"ruleId":"105","severity":1,"message":"116","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},{"ruleId":"105","severity":1,"message":"117","line":1,"column":18,"nodeType":"107","messageId":"108","endLine":1,"endColumn":22},{"ruleId":"105","severity":1,"message":"118","line":1,"column":24,"nodeType":"107","messageId":"108","endLine":1,"endColumn":33},{"ruleId":"105","severity":1,"message":"110","line":11,"column":10,"nodeType":"107","messageId":"108","endLine":11,"endColumn":18},{"ruleId":"105","severity":1,"message":"115","line":12,"column":8,"nodeType":"107","messageId":"108","endLine":12,"endColumn":13},{"ruleId":"105","severity":1,"message":"119","line":13,"column":8,"nodeType":"107","messageId":"108","endLine":13,"endColumn":18},{"ruleId":"105","severity":1,"message":"120","line":14,"column":8,"nodeType":"107","messageId":"108","endLine":14,"endColumn":18},{"ruleId":"105","severity":1,"message":"121","line":15,"column":8,"nodeType":"107","messageId":"108","endLine":15,"endColumn":15},{"ruleId":"105","severity":1,"message":"115","line":16,"column":8,"nodeType":"107","messageId":"108","endLine":16,"endColumn":13},{"ruleId":"105","severity":1,"message":"122","line":31,"column":10,"nodeType":"107","messageId":"108","endLine":31,"endColumn":19},{"ruleId":"105","severity":1,"message":"123","line":40,"column":9,"nodeType":"107","messageId":"108","endLine":40,"endColumn":14},{"ruleId":"105","severity":1,"message":"124","line":56,"column":18,"nodeType":"107","messageId":"108","endLine":56,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":61,"column":21,"nodeType":"127","messageId":"128","endLine":61,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"105","severity":1,"message":"115","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":3,"column":21,"nodeType":"107","messageId":"108","endLine":3,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":16},{"ruleId":"105","severity":1,"message":"129","line":7,"column":9,"nodeType":"107","messageId":"108","endLine":7,"endColumn":17},{"ruleId":"105","severity":1,"message":"130","line":8,"column":11,"nodeType":"107","messageId":"108","endLine":8,"endColumn":16},{"ruleId":"105","severity":1,"message":"131","line":8,"column":17,"nodeType":"107","messageId":"108","endLine":8,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":85,"column":17,"nodeType":"134","endLine":85,"endColumn":29},{"ruleId":"105","severity":1,"message":"135","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"136","line":32,"column":17,"nodeType":"107","messageId":"108","endLine":32,"endColumn":20},{"ruleId":"105","severity":1,"message":"136","line":53,"column":19,"nodeType":"107","messageId":"108","endLine":53,"endColumn":22},{"ruleId":"105","severity":1,"message":"135","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"105","severity":1,"message":"136","line":11,"column":15,"nodeType":"107","messageId":"108","endLine":11,"endColumn":18},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'DeleteIcon' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'getStyles' is defined but never used.","'theme' is assigned a value but never used.","'status' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'navigate' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]