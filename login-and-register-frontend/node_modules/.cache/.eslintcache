[{"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\index.js":"1","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\App.js":"2","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\routes\\Routes.jsx":"3","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\header\\Header.jsx":"4","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\Dashboard.jsx":"5","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\inventory\\Inventory.jsx":"6","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx":"7","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\customer\\Customer.jsx":"8","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\order\\Order.jsx":"9","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx":"10","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx":"11","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx":"12","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useFetchInventory.js":"13","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useOrder.js":"14","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\barchart.jsx":"15","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useUser.js":"16"},{"size":268,"mtime":1652678818729,"results":"17","hashOfConfig":"18"},{"size":335,"mtime":1652678818717,"results":"19","hashOfConfig":"18"},{"size":2179,"mtime":1653108180803,"results":"20","hashOfConfig":"18"},{"size":4048,"mtime":1653046311392,"results":"21","hashOfConfig":"18"},{"size":3328,"mtime":1653019058390,"results":"22","hashOfConfig":"18"},{"size":5860,"mtime":1653106079911,"results":"23","hashOfConfig":"18"},{"size":522,"mtime":1652678818722,"results":"24","hashOfConfig":"18"},{"size":3850,"mtime":1652947963858,"results":"25","hashOfConfig":"18"},{"size":8169,"mtime":1652944804452,"results":"26","hashOfConfig":"18"},{"size":2247,"mtime":1653027159169,"results":"27","hashOfConfig":"18"},{"size":2795,"mtime":1653027528917,"results":"28","hashOfConfig":"18"},{"size":5847,"mtime":1652678818728,"results":"29","hashOfConfig":"18"},{"size":2260,"mtime":1653115675257,"results":"30","hashOfConfig":"18"},{"size":1351,"mtime":1652947595831,"results":"31","hashOfConfig":"18"},{"size":2347,"mtime":1653019681539,"results":"32","hashOfConfig":"18"},{"size":1366,"mtime":1653046236249,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1olcq8o",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\index.js",[],["77","78"],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\App.js",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\routes\\Routes.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\header\\Header.jsx",["79","80","81","82","83","84","85","86"],"import { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport useUser from \"../../hooks/useUser\";\r\n\r\nconst HeaderPage = () => {\r\n  const location = useLocation();\r\n  const { user } = useUser();\r\n  console.log(user);\r\n  console.log(location.pathname);\r\n  return (\r\n    <>\r\n      <div>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <InventoryIcon />\r\n            {location.pathname == \"/user\" ||\r\n            location.pathname == \"/dashboard\" ||\r\n            location.pathname == \"/order\" ||\r\n            location.pathname == \"/customer\" ||\r\n            location.pathname == \"/inventory\" ? (\r\n              <>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"dashboard\"\r\n                  >\r\n                    DashBoard\r\n                  </Link>\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"inventory\"\r\n                  >\r\n                    Inventory\r\n                  </Link>\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"order\"\r\n                  >\r\n                    Order\r\n                  </Link>\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"customer\"\r\n                  >\r\n                    Customer\r\n                  </Link>\r\n                </Typography>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"/user\"\r\n                  >\r\n                    User\r\n                  </Link>\r\n                </Typography>\r\n                {console.log(\"here\")}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  sx={{ marginLeft: \"auto\", bgcolor: \"secondary.main\" }}\r\n                >\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"/\"\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {console.log(\"here i am \")}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  sx={{ marginLeft: \"auto\", bgcolor: \"secondary.main\" }}\r\n                >\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"login\"\r\n                  >\r\n                    Login\r\n                  </Link>\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  sx={{ marginLeft: \"10px\", bgcolor: \"secondary.main\" }}\r\n                >\r\n                  <Link\r\n                    style={{ color: \"white\", textDecoration: \"none\" }}\r\n                    to=\"register\"\r\n                  >\r\n                    Register\r\n                  </Link>\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderPage;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\Dashboard.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\inventory\\Inventory.jsx",["87","88"],"import { Button, Grid, TextField, Typography } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport useFetchInventory from \"../../../hooks/useFetchInventory\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst Inventory = () => {\r\n  const [product, setProduct] = useState({\r\n    productname: \"\",\r\n    quantity: \"\",\r\n    price: \"\",\r\n  });\r\n\r\n  const { loading, data, error, addProduct, deleteProduct } =\r\n    useFetchInventory();\r\n\r\n  const productHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setProduct({\r\n      ...product,\r\n      [name]: value,\r\n    });\r\n  };\r\nconsole.log(data,\"💕💕💕\");\r\n  //adding the stockHandler\r\n  const addProductHandler = (e) => {\r\n    console.log(product);\r\n    e.preventDefault();\r\n    addProduct(product);\r\n    setProduct({\r\n      productname: \"\",\r\n      quantity: \"\",\r\n      price: \"\",\r\n    });\r\n  };\r\n\r\n  const deleteProductHandler = (index) => {\r\n    deleteProduct(index);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography>Add Product</Typography>\r\n\r\n      <form onSubmit={addProductHandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid xs={12} sm={6} item>\r\n            <TextField\r\n              placeholder=\"Enter Product name\"\r\n              label=\"Product Name\"\r\n              name=\"productname\"\r\n              value={product.productname}\r\n              variant=\"outlined\"\r\n              onChange={productHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid xs={12} sm={6} item>\r\n            <TextField\r\n              type=\"number\"\r\n              placeholder=\"Enter Quantity of product\"\r\n              name=\"quantity\"\r\n              value={product.quantity}\r\n              label=\"Quantity\"\r\n              variant=\"outlined\"\r\n              onChange={productHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid xs={12} sm={6} item>\r\n            <TextField\r\n              type=\"number\"\r\n              name=\"price\"\r\n              value={product.price}\r\n              placeholder=\"Enter Price of product\"\r\n              label=\"Price\"\r\n              variant=\"outlined\"\r\n              onChange={productHandler}\r\n              fullWidth\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Add Product\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Typography>Inventory Stock</Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Sr.No</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Product Id</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Product Name</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Product Price</StyledTableCell>\r\n              <StyledTableCell align=\"left\"> Qty</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Total Price</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Delete</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {false ? (\r\n            <p>Loading...</p>\r\n          ) : error ? (\r\n            <p>{error}</p>\r\n          ) : (\r\n            <TableBody>\r\n              {data.map((stock, index) => (\r\n                <StyledTableRow key={index}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {index + 1}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    SKU000{index + 1}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    {stock.productname}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{stock.price}</StyledTableCell>\r\n\r\n                  <StyledTableCell align=\"left\">\r\n                    {stock.totalQuantity}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    {stock.totalprice}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">\r\n                    <Tooltip title=\"Delete\">\r\n                      <IconButton>\r\n                        <DeleteIcon\r\n                          onClick={() => deleteProductHandler(index)}\r\n                        />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\homepage\\Homepage.jsx",[],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\customer\\Customer.jsx",["89","90","91","92","93","94","95","96"],"import { Button, Grid, TextField, Typography } from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport useOrder from \"../../../hooks/useOrder\";\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  \"&:nth-of-type(odd)\": {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  \"&:last-child td, &:last-child th\": {\r\n    border: 0,\r\n  },\r\n}));\r\nconst Customer = () => {\r\n  const { customerDetails } = useOrder();\r\n  return (\r\n    <div>\r\n      <Typography>Customer Order Details</Typography>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell align=\"left\">Sr.No</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Customer Id</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Customer Name</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Address</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Order Qty</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Total Price</StyledTableCell>\r\n              <StyledTableCell align=\"left\">Mobile No</StyledTableCell>\r\n              {/* // <StyledTableCell align=\"left\">Delete Order</StyledTableCell> */}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {customerDetails.map((details, index) => (\r\n              <StyledTableRow>\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {index + 1}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{details._id}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {`${details.firstname} ${details.lastname} `}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">{details.email}</StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {details.address}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {details.quantity}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {details.totalprice}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\">\r\n                  {details.phoneno}\r\n                </StyledTableCell>\r\n                {/* <StyledTableCell align=\"left\">\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                      <DeleteIcon\r\n                      // onClick={() => deleteProductHandler(index)}\r\n                      />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </StyledTableCell> */}\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default Customer;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\order\\Order.jsx",["97","98","99","100","101"],"import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport axios from \"axios\";\r\nimport useFetchInventory from \"../../../hooks/useFetchInventory\";\r\nimport useOrder from \"../../../hooks/useOrder\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, prodName, theme) {\r\n  return {\r\n    fontWeight:\r\n      prodName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst Order = () => {\r\n  const theme = useTheme();\r\n  // const [prodName, setprodName] = React.useState();\r\n  const [price, setPrice] = React.useState();\r\n  const [quantity, setQuantity] = React.useState();\r\n  const [error, setError] = React.useState();\r\n  const [ordetails, setOrdetails] = React.useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    date: \"\",\r\n    email: \"\",\r\n    phoneno: \"\",\r\n    address: \"\",\r\n    productName: \"\",\r\n  });\r\n\r\n  const { data } = useFetchInventory();\r\n  const { order, status } = useOrder();\r\n\r\n  const quantityHandleChange = (e) => {\r\n    setQuantity(e.target.value);\r\n    console.log(e.target.value);\r\n    data.map((list) => {\r\n      if (\r\n        list.productname === ordetails.productName &&\r\n        e.target.value < list.totalQuantity\r\n      ) {\r\n        setPrice(list.price * e.target.value);\r\n        setError(\" \");\r\n      } else {\r\n        setError(\"out of stock\");\r\n        console.log(\"out of stock\");\r\n      }\r\n    });\r\n  };\r\n  // console.log(price, quantity, \"..........................................\");\r\n  //getting list of product\r\n\r\n  // const handleChange = (event) => {\r\n  //   const {\r\n  //     target: { value },\r\n  //   } = event;\r\n  //   setprodName(value);\r\n  // };\r\n\r\n  const orderHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setOrdetails({\r\n      ...ordetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const orderplaceHandler = (ordetails, price, quantity, e) => {\r\n    e.preventDefault();\r\n\r\n    order(ordetails, price, quantity);\r\n    setOrdetails({\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      date: \"\",\r\n      email: \"\",\r\n      phoneno: \"\",\r\n      address: \"\",\r\n      productName: \"\",\r\n    });\r\n    setPrice(\"\");\r\n    setQuantity(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* // {status ?} */}\r\n      <Grid>\r\n        <Card style={{ padding: \"20px 5px\", margin: \"0 auto\" }}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              Order Details\r\n            </Typography>\r\n\r\n            <form\r\n              onSubmit={(e) => orderplaceHandler(ordetails, price, quantity, e)}\r\n            >\r\n              <Grid container spacing={1}>\r\n                <Grid xs={12} sm={6} item>\r\n                  <TextField\r\n                    placeholder=\"Enter first name\"\r\n                    name=\"firstname\"\r\n                    value={ordetails.firstname}\r\n                    label=\"First Name\"\r\n                    onChange={orderHandleChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid xs={12} sm={6} item>\r\n                  <TextField\r\n                    placeholder=\"Enter last name\"\r\n                    name=\"lastname\"\r\n                    value={ordetails.lastname}\r\n                    onChange={orderHandleChange}\r\n                    label=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={ordetails.email}\r\n                    placeholder=\"Enter email\"\r\n                    onChange={orderHandleChange}\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    name=\"phoneno\"\r\n                    value={ordetails.phoneno}\r\n                    placeholder=\"Enter phone number\"\r\n                    onChange={orderHandleChange}\r\n                    label=\"Phone\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={ordetails.date}\r\n                    onChange={orderHandleChange}\r\n                    label=\"Date\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Delivery Address\"\r\n                    name=\"address\"\r\n                    value={ordetails.address}\r\n                    onChange={orderHandleChange}\r\n                    placeholder=\"Enter Your address\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl sx={{}} fullWidth required>\r\n                    <InputLabel id=\"demo-multiple-name-label\">\r\n                      Product\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-multiple-name-label\"\r\n                      id=\"demo-multiple-name\"\r\n                      name=\"productName\"\r\n                      value={ordetails.productName}\r\n                      onChange={orderHandleChange}\r\n                      input={<OutlinedInput label=\"Name\" />}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {data.map((product) => (\r\n                        <MenuItem\r\n                          key={product._id}\r\n                          value={product.productname}\r\n                          //   style={getStyles(name, prodName, theme)}\r\n                        >\r\n                          {product.productname}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    onChange={quantityHandleChange}\r\n                    value={quantity}\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                  <small>{error}</small>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Total Price\"\r\n                    variant=\"outlined\"\r\n                    value={price}\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                  >\r\n                    Place Order\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\loginpage\\Loginpage.jsx",["102","103","104","105"],"import { Button, TextField, Typography } from \"@mui/material\";\r\nimport style from \"./Loginpage.module.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport useUser from \"../../../hooks/useUser\";\r\n\r\nconst LoginPage = ({ setUser }) => {\r\n  let navigate = useNavigate();\r\n  const { authUser } = useUser();\r\n  const [error, setError] = useState();\r\n  const [loginuser, setLoginuser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onchangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginuser({\r\n      ...loginuser,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const loginHandler = (loginuser, e) => {\r\n    e.preventDefault();\r\n\r\n    if (loginuser.email && loginuser.password) {\r\n      authUser(loginuser);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className={style.route}\r\n        onSubmit={(e) => loginHandler(loginuser, e)}\r\n      >\r\n        <div className={style.form}>\r\n          <Typography variant=\"h3\">Login</Typography>\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Email Id\"\r\n            type=\"email\"\r\n            color=\"secondary\"\r\n            name=\"email\"\r\n            value={loginuser.email}\r\n            onChange={onchangeHandler}\r\n            placeholder=\"Enter your EmailId\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            required\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            color=\"secondary\"\r\n            name=\"password\"\r\n            value={loginuser.password}\r\n            onChange={onchangeHandler}\r\n            placeholder=\"Enter your password\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            required\r\n          />{\" \"}\r\n          <br />\r\n          <Button\r\n            size=\"large\"\r\n            sx={{ marginTop: \"20px\" }}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Login\r\n          </Button>\r\n          <p>{error}</p>\r\n        </div>\r\n      </form>\r\n      {console.log(loginuser)}\r\n    </>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\registerpage\\Registerpage.jsx",["106","107","108"],"import { Button, TextField, Typography } from \"@mui/material\";\r\nimport style from \"./Registerpage.module.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport useUser from \"../../../hooks/useUser\";\r\n\r\nconst RegisterPage = () => {\r\n  let navigate = useNavigate();\r\n  const [error, setError] = useState();\r\n  const { registeruser } = useUser();\r\n  const [user, setUser] = useState({\r\n    fullname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onchangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const RegisterHandler = (user, e) => {\r\n    e.preventDefault();\r\n    if (user.email && user.fullname && user.password) {\r\n      registeruser(user);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form\r\n        className={style.form}\r\n        onSubmit={(e) => {\r\n          RegisterHandler(user, e);\r\n        }}\r\n      >\r\n        <div className={style.body}>\r\n          <Typography variant=\"h3\" sx={{ margin: \"20px\" }}>\r\n            {\" \"}\r\n            Register\r\n          </Typography>\r\n\r\n          <TextField\r\n            id=\"outlined-fullname\"\r\n            label=\"Full Name\"\r\n            onChange={onchangeHandler}\r\n            name=\"fullname\"\r\n            value={user.fullname}\r\n            type=\"text\"\r\n            color=\"secondary\"\r\n            required\r\n            sx={{ marginBottom: \"10px\" }}\r\n            fullWidth\r\n            placeholder=\"Enter your Full Name\"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-emailid\"\r\n            label=\"Email Id\"\r\n            onChange={onchangeHandler}\r\n            name=\"email\"\r\n            value={user.email}\r\n            type=\"email\"\r\n            color=\"secondary\"\r\n            required\r\n            sx={{ marginBottom: \"10px\" }}\r\n            fullWidth\r\n            placeholder=\"Enter your Emailid\"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-password\"\r\n            label=\" Password\"\r\n            onChange={onchangeHandler}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={user.password}\r\n            color=\"secondary\"\r\n            required\r\n            sx={{ marginBottom: \"10px\" }}\r\n            fullWidth\r\n            placeholder=\"Enter your password\"\r\n            variant=\"outlined\"\r\n          />\r\n\r\n          <Button\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            sx={{ marginTop: \"20px\" }}\r\n            variant=\"contained\"\r\n          >\r\n            Register\r\n          </Button>\r\n          <p style={{ color: \"red\" }}>{error}</p>\r\n        </div>\r\n      </form>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\user\\user.jsx",["109","110","111","112","113","114","115"],"import { TextField, Typography, Button } from \"@mui/material\"\r\nimport axios from \"axios\"\r\nimport {  useState, useEffect } from \"react\"\r\nimport style from \"./user.module.css\"\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nconst User = () => {\r\n    let navigate = useNavigate();\r\n    const[error,setError]=useState()\r\n    const [user, setUser] = useState({\r\n        fullname: '',\r\n        email: \"\",\r\n        address: \"\",\r\n        mobileNo: \"\",\r\n        phoneNo: \"\",\r\n        //uploadedfile:null\r\n        \r\n    })\r\n\r\n   /* const profileimageHandler=(e)=>{\r\n       console.log(e.target.files[0])\r\n         setUser({...user,uploadedfile:e.target.files[0]})\r\n    }\r\n*/\r\n\r\n   // console.log(user.phoneNo)\r\n    //const email= JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    // useEffect(()=>{\r\n    //     const fetchdata=async()=>{\r\n    //         await axios.get(`http://localhost:4000/updateprofile/${email}`)\r\n    //         .then((res)=>{\r\n    //             console.log(res.data)\r\n               \r\n    //             setUser({fullname:res.data.fullname,\r\n    //                 email:res.data.email,\r\n    //                 address:res.data.address,\r\n    //                 mobileNo:res.data.mobileNo,\r\n    //                 phoneNo:res.data.phoneNo})\r\n    //         }).catch((err)=>{\r\n    //             console.log(err)\r\n    //         })\r\n    //     }\r\n    //     fetchdata();\r\n    // },[email]) \r\n\r\n//     const updateHandler=()=>{\r\n//         if(user){\r\n//             console.log(\"...user\",user)\r\n//         //     var formData= new FormData();\r\n//         //     // console.log(\"....\",user.uploadedfile,\"-------\",user.uploadedfile.name)\r\n//         //     //formData.append('uploadfile',user.uploadedfile,user.uploadedfile.name)\r\n//         //     formData.append(\"fullname\",\"abc\")\r\n//         //     formData.append(\"email\",user.email)\r\n//         //     formData.append(\"mobileNo\",user.mobileNo)\r\n//         //     formData.append(\"phoneNo\",user.phoneNo)\r\n//         //     formData.append(\"address\",user.address)\r\n//         //    // var options = { content: formData };\r\n           \r\n//              axios.post(`http://localhost:4000/updateprofile/${email}`,user)\r\n//             .then((res)=>{\r\n//              localStorage.setItem('userInfo', JSON.stringify(res.data))\r\n//                console.log(res.data)\r\n//                  navigate(\"/user\")\r\n//              }).catch((err)=>{\r\n//                  setError(\"User not found\")\r\n//                  console.log(\"error msg\",err)\r\n//              })\r\n//         }\r\n        \r\n//  }\r\n    \r\n   \r\n\r\n    const onchangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n    return (\r\n        <div className={style.form}>\r\n            <form  className={style.bodyform} >\r\n                <Typography variant=\"h3\">My Profile</Typography>\r\n                <div className={style.img}>\r\n                <img src=\"\"></img>\r\n                </div>\r\n                <label>Full Name</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Full Name\"\r\n                    name=\"fullname\"\r\n                   // value={user.fullname}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    onChange={onchangeHandler}\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Full Name\"\r\n                    variant=\"outlined\" />\r\n                <label > PhoneNumber</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"PhoneNumber\"\r\n                    name=\"phoneNo\"\r\n                   // value={user.phoneNo}\r\n                    type=\"text\"\r\n                    onChange={onchangeHandler}\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your phoneNo\"\r\n                    variant=\"outlined\" />\r\n                <label >MobileNo</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"MobileNo\"\r\n                    name=\"mobileNo\"\r\n                   // value={user.mobileNo}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your MobileNo\"\r\n                    variant=\"outlined\" />\r\n                <label htmlFor=\"\">Email</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                  //  value={user.email}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Email\"\r\n                    variant=\"outlined\" />\r\n                <label>Address</label>\r\n                <TextField id=\"outlined-fullname\"\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                   // value={user.address}\r\n                    onChange={onchangeHandler}\r\n                    type=\"text\"\r\n                    color=\"secondary\"\r\n                    required sx={{ marginBottom: \"10px\" }}\r\n                    fullWidth placeholder=\"Enter your Address\"\r\n                    variant=\"outlined\" />\r\n                <label>Profile Image</label>\r\n                <div>\r\n                <input type=\"file\"     name=\"uploadfile\"/>\r\n                </div>\r\n\r\n                <Button size=\"large\" sx={{ marginTop: \"20px\" }}   variant=\"contained\">UpdateProfile</Button>\r\n            </form>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default User","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useFetchInventory.js",["116","117","118"],"D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useOrder.js",["119","120"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useOrder = () => {\r\n  const [customerDetails, setCustomerDetails] = useState([]);\r\n  //const[status,setStatus]=useState(false)\r\n\r\n  const order = (ordetails, price, quantity) => {\r\n    try {\r\n      const fetchData = async () => {\r\n        const res = await axios.post(\"http://localhost:5000/orderplaced\", {\r\n          ordetails: ordetails,\r\n          price: price,\r\n          quantity: quantity,\r\n        });\r\n        //  if(res.status===201){\r\n        //      setStatus(true)\r\n        //  }\r\n        // setCustomerDetails(res.data);\r\n      };\r\n      fetchData();\r\n      //setStatus(false)\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      // setError(error.message)\r\n      // setLoading(false)\r\n    }\r\n  };\r\n  //\r\n  useEffect(() => {\r\n    //setLoading(true)\r\n    try {\r\n      const fetchData = async () => {\r\n        const res = await axios.get(\"http://localhost:5000/orderlist\");\r\n        setCustomerDetails(res.data);\r\n        // setLoading(false)\r\n      };\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      // setError(error.message)\r\n      // setLoading(false)\r\n    }\r\n  }, []);\r\n  console.log(customerDetails);\r\n  return { order, customerDetails };\r\n};\r\nexport default useOrder;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\components\\pages\\dashboard\\barchart.jsx",["121"],"import React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport useOrder from \"../../../hooks/useOrder\";\r\n\r\nconst Barchart = () => {\r\n  const [productName, setproductName] = useState([]);\r\n  const [quantity, setQuantity] = useState([]);\r\n  {\r\n  }\r\n  const { customerDetails } = useOrder();\r\n  useEffect(() => {\r\n    const productname = [];\r\n    const productquantity = [];\r\n\r\n    const getOrderDetails = async () => {\r\n      for (let i = 0; i < customerDetails.length; i++) {\r\n        productname.push(customerDetails[i].productName);\r\n        productquantity.push(parseInt(customerDetails[i].quantity));\r\n      }\r\n      setproductName(productname);\r\n      setQuantity(productquantity);\r\n    };\r\n    getOrderDetails();\r\n  }, [customerDetails]);\r\n\r\n  return (\r\n    <div>\r\n      <Chart\r\n        type=\"bar\"\r\n        width={600}\r\n        height={300}\r\n        series={[\r\n          {\r\n            name: \"Customer Order \",\r\n            data: quantity,\r\n          },\r\n        ]}\r\n        options={{\r\n          title: {\r\n            text: \"BarChart\",\r\n            style: { fontSize: 20 },\r\n          },\r\n\r\n          subtitle: {\r\n            text: \"This is BarChart Graph\",\r\n            style: { fontSize: 18 },\r\n          },\r\n\r\n          colors: [\"#f90000\"],\r\n          theme: { mode: \"light\" },\r\n\r\n          xaxis: {\r\n            //  tickPlacement: \"on\",\r\n            categories: productName,\r\n            title: {\r\n              text: \"Product Name\",\r\n              style: { color: \"#f90000\", fontSize: 20 },\r\n            },\r\n          },\r\n\r\n          yaxis: {\r\n            // labels: {\r\n            //   formatter: (val) => {\r\n            //     return `${val}`;\r\n            //   },\r\n            //   style: { fontSize: \"15\", colors: [\"#f90000\"] },\r\n            // },\r\n            title: {\r\n              text: \"Order Quantity\",\r\n              style: { color: \"#f90000\", fontSize: 15 },\r\n            },\r\n          },\r\n\r\n          legend: {\r\n            show: true,\r\n            position: \"right\",\r\n          },\r\n\r\n          dataLabels: {\r\n            formatter: (val) => {\r\n              return `${val}`;\r\n            },\r\n            style: {\r\n              colors: [\"#f4f4f4\"],\r\n              fontSize: 15,\r\n            },\r\n          },\r\n        }}\r\n      ></Chart>\r\n    </div>\r\n  );\r\n};\r\nexport default Barchart;\r\n","D:\\piyush\\project\\Inventory-Management-System\\login-and-register-frontend\\src\\hooks\\useUser.js",["122","123","124"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nconst useUser = () => {\r\n  const [userinfo, setUserinfo] = useState();\r\n  let navigate = useNavigate();\r\n  const registeruser = (newuser) => {\r\n    try {\r\n      const register = async () => {\r\n        const user = await axios.post(\r\n          \"http://localhost:5000/register\",\r\n          newuser\r\n        );\r\n        if (user.status === 201) {\r\n          setUserinfo(user.data);\r\n          navigate(\"/dashboard\");\r\n        }\r\n      };\r\n      register();\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      // setError(error.message)\r\n      // setLoading(false)\r\n    }\r\n  };\r\n\r\n  const authUser = (user) => {\r\n    try {\r\n      const loginuser = async () => {\r\n        const auth = await axios.post(\"http://localhost:5000/login\", user);\r\n        if (auth.status === 201) {\r\n          localStorage.setItem(\"token\", auth.data.token);\r\n          setUserinfo(auth.data);\r\n          console.log(auth.data);\r\n          navigate(\"/dashboard\");\r\n        }\r\n      };\r\n      loginuser();\r\n    } catch (error) {\r\n      console.error(\"Error: \", error.message);\r\n      // setError(error.message)\r\n      // setLoading(false)\r\n    }\r\n  };\r\n  return { registeruser, userinfo, authUser };\r\n};\r\n\r\nexport default useUser;\r\n",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":22},{"ruleId":"129","severity":1,"message":"133","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":19},{"ruleId":"129","severity":1,"message":"134","line":6,"column":21,"nodeType":"131","messageId":"132","endLine":6,"endColumn":29},{"ruleId":"135","severity":1,"message":"136","line":21,"column":32,"nodeType":"137","messageId":"138","endLine":21,"endColumn":34},{"ruleId":"135","severity":1,"message":"136","line":22,"column":31,"nodeType":"137","messageId":"138","endLine":22,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":23,"column":31,"nodeType":"137","messageId":"138","endLine":23,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":24,"column":31,"nodeType":"137","messageId":"138","endLine":24,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":25,"column":31,"nodeType":"137","messageId":"138","endLine":25,"endColumn":33},{"ruleId":"129","severity":1,"message":"139","line":12,"column":8,"nodeType":"131","messageId":"132","endLine":12,"endColumn":13},{"ruleId":"129","severity":1,"message":"140","line":45,"column":11,"nodeType":"131","messageId":"132","endLine":45,"endColumn":18},{"ruleId":"129","severity":1,"message":"141","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":16},{"ruleId":"129","severity":1,"message":"142","line":1,"column":18,"nodeType":"131","messageId":"132","endLine":1,"endColumn":22},{"ruleId":"129","severity":1,"message":"143","line":1,"column":24,"nodeType":"131","messageId":"132","endLine":1,"endColumn":33},{"ruleId":"129","severity":1,"message":"134","line":11,"column":10,"nodeType":"131","messageId":"132","endLine":11,"endColumn":18},{"ruleId":"129","severity":1,"message":"139","line":12,"column":8,"nodeType":"131","messageId":"132","endLine":12,"endColumn":13},{"ruleId":"129","severity":1,"message":"144","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":18},{"ruleId":"129","severity":1,"message":"145","line":14,"column":8,"nodeType":"131","messageId":"132","endLine":14,"endColumn":18},{"ruleId":"129","severity":1,"message":"146","line":15,"column":8,"nodeType":"131","messageId":"132","endLine":15,"endColumn":15},{"ruleId":"129","severity":1,"message":"139","line":16,"column":8,"nodeType":"131","messageId":"132","endLine":16,"endColumn":13},{"ruleId":"129","severity":1,"message":"147","line":31,"column":10,"nodeType":"131","messageId":"132","endLine":31,"endColumn":19},{"ruleId":"129","severity":1,"message":"148","line":40,"column":9,"nodeType":"131","messageId":"132","endLine":40,"endColumn":14},{"ruleId":"129","severity":1,"message":"149","line":56,"column":18,"nodeType":"131","messageId":"132","endLine":56,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":61,"column":21,"nodeType":"152","messageId":"153","endLine":61,"endColumn":23},{"ruleId":"129","severity":1,"message":"139","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":16},{"ruleId":"129","severity":1,"message":"154","line":9,"column":7,"nodeType":"131","messageId":"132","endLine":9,"endColumn":15},{"ruleId":"129","severity":1,"message":"155","line":11,"column":17,"nodeType":"131","messageId":"132","endLine":11,"endColumn":25},{"ruleId":"129","severity":1,"message":"139","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":13},{"ruleId":"129","severity":1,"message":"154","line":9,"column":7,"nodeType":"131","messageId":"132","endLine":9,"endColumn":15},{"ruleId":"129","severity":1,"message":"155","line":10,"column":17,"nodeType":"131","messageId":"132","endLine":10,"endColumn":25},{"ruleId":"129","severity":1,"message":"139","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"133","line":3,"column":21,"nodeType":"131","messageId":"132","endLine":3,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":16},{"ruleId":"129","severity":1,"message":"154","line":7,"column":9,"nodeType":"131","messageId":"132","endLine":7,"endColumn":17},{"ruleId":"129","severity":1,"message":"156","line":8,"column":11,"nodeType":"131","messageId":"132","endLine":8,"endColumn":16},{"ruleId":"129","severity":1,"message":"155","line":8,"column":17,"nodeType":"131","messageId":"132","endLine":8,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":85,"column":17,"nodeType":"159","endLine":85,"endColumn":29},{"ruleId":"129","severity":1,"message":"160","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":32,"column":6,"nodeType":"163","endLine":32,"endColumn":18,"suggestions":"164"},{"ruleId":"129","severity":1,"message":"165","line":65,"column":15,"nodeType":"131","messageId":"132","endLine":65,"endColumn":18},{"ruleId":"129","severity":1,"message":"160","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"165","line":11,"column":15,"nodeType":"131","messageId":"132","endLine":11,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":8,"column":3,"nodeType":"168","messageId":"169","endLine":9,"endColumn":4},{"ruleId":"129","severity":1,"message":"160","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"133","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":16},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'loading' is assigned a value but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'DeleteIcon' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'getStyles' is defined but never used.","'theme' is assigned a value but never used.","'status' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'navigate' is assigned a value but never used.","'setError' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["172"],"'res' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [data, getproduct, token]",{"range":"175","text":"176"},[948,960],"[data, getproduct, token]"]